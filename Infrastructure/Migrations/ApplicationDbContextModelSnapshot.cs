// <auto-generated />
using Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MyApp.Domain.Creative", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Creatives", (string)null);

                    b.HasDiscriminator<string>("Discriminator").HasValue("Creative");
                });

            modelBuilder.Entity("MyApp.Domain.DomainModel.PageSnippet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("PageId")
                        .HasColumnType("int");

                    b.Property<int>("SnippetId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PageId");

                    b.ToTable("PagesSnippets", (string)null);
                });

            modelBuilder.Entity("MyApp.Domain.DomainModel.Page", b =>
                {
                    b.HasBaseType("MyApp.Domain.Creative");

                    b.HasDiscriminator().HasValue("Page");
                });

            modelBuilder.Entity("MyApp.Domain.DomainModel.Snippet", b =>
                {
                    b.HasBaseType("MyApp.Domain.Creative");

                    b.HasDiscriminator().HasValue("Snippets");
                });

            modelBuilder.Entity("MyApp.Domain.DomainModel.PageSnippet", b =>
                {
                    b.HasOne("MyApp.Domain.DomainModel.Page", null)
                        .WithMany("PageSnippets")
                        .HasForeignKey("PageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MyApp.Domain.DomainModel.Page", b =>
                {
                    b.Navigation("PageSnippets");
                });
#pragma warning restore 612, 618
        }
    }
}
